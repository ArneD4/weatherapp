{"version":3,"sources":["App.js","index.js"],"names":["App","state","getWeather","cityname","Promise","resolve","reject","fetch","then","data","json","res","setState","console","log","this","imgSource","weather","icon","today","Date","date","getDate","getMonth","getFullYear","id","Container","className","Row","Col","md","name","sys","country","Input","type","placeholder","Button","onClick","document","getElementById","value","Math","round","main","temp","src","alt","wind","speed","humidity","temp_max","temp_min","Component","ReactDOM","render"],"mappings":"yQAOqBA,E,4MACnBC,MAAQ,CAAE,MAAS,CAAE,KAAQ,MAAQ,IAAO,SAAW,QAAW,CAAC,CAAE,GAAM,IAAK,KAAQ,SAAU,YAAe,kBAAmB,KAAQ,QAAU,KAAQ,WAAY,KAAQ,CAAE,KAAQ,MAAO,WAAc,OAAQ,SAAY,OAAQ,SAAY,OAAQ,SAAY,IAAK,SAAY,IAAM,WAAc,IAAM,KAAQ,CAAE,MAAS,IAAK,IAAO,KAAO,OAAU,CAAE,IAAO,IAAM,GAAM,WAAY,IAAO,CAAE,KAAQ,EAAG,GAAM,KAAM,QAAW,KAAM,QAAW,WAAY,OAAU,YAAc,SAAY,EAAG,GAAM,QAAS,KAAQ,SAAU,IAAO,K,EAEhiBC,WAAa,SAACC,GACZ,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,IAAM,qDAAD,OAAsDJ,EAAtD,4CACFK,MAAK,SAAAC,GAAI,OAAIA,EAAKC,UAClBF,MAAK,SAAAG,GAAG,OAAI,EAAKC,SAASD,U,uDAOvB,IAAD,OACPE,QAAQC,IAAIC,KAAKd,OACjB,IAAIe,EAAS,2CAAuCD,KAAKd,MAAMgB,QAAQ,GAAGC,KAA7D,WACTC,EAAQ,IAAIC,KACZC,EAAI,UAAMF,EAAMG,UAAZ,YAAyBH,EAAMI,WAAa,EAA5C,YAAiDJ,EAAMK,eAM/D,OAHAX,QAAQC,IAAIO,GAKV,gCACE,oBAAII,GAAG,OAAP,oCAEA,cAACC,EAAA,EAAD,CAAWC,UAAU,+BAArB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAGH,UAAU,gBAAtB,SACE,eAACC,EAAA,EAAD,CAAKD,UAAU,SAAf,UACE,+BAAKZ,KAAKd,MAAM8B,KAAhB,KAAwBhB,KAAKd,MAAM+B,IAAIC,WACvC,6BAAKZ,IACL,cAACa,EAAA,EAAD,CAAOC,KAAK,OAAOV,GAAG,WAAWE,UAAU,cAAcS,YAAY,cACrE,cAACC,EAAA,EAAD,CAAQC,QAAS,kBAAM,EAAKpC,WAAWqC,SAASC,eAAe,YAAYC,QAA3E,2CAIJ,cAACZ,EAAA,EAAD,CAAKC,GAAI,EAAGH,UAAU,iBAAtB,SACE,eAACC,EAAA,EAAD,CAAKD,UAAU,SAAf,UACE,+BAAKe,KAAKC,MAAO5B,KAAKd,MAAM2C,KAAKC,KAAQ,QAAzC,aACA,+BAAK9B,KAAKd,MAAMgB,QAAQ,GAAG2B,KAA3B,OACA,qBAAKnB,GAAG,MAAMqB,IAAK9B,EAAW+B,IAAG,UAAKhC,KAAKd,MAAM+B,IAAIC,QAApB,0BAIrC,cAACJ,EAAA,EAAD,CAAKC,GAAI,EAAGH,UAAU,gBAAtB,SACE,cAACC,EAAA,EAAD,CAAKD,UAAU,SAAf,SACE,+BACE,+BACE,8CACA,+BAAKZ,KAAKd,MAAM+C,KAAKC,MAArB,aAEF,+BACE,4CACA,+BAAKlC,KAAKd,MAAM2C,KAAKM,SAArB,WAEF,+BACE,4CACA,+BAAKR,KAAKC,MAAO5B,KAAKd,MAAM2C,KAAKO,SAAY,QAA7C,gBAEF,+BACE,4CACA,+BAAKT,KAAKC,MAAO5B,KAAKd,MAAM2C,KAAKQ,SAAY,QAA7C,mC,GAjEaC,a,MCHjCC,IAASC,OACP,cAAC,EAAD,IACAhB,SAASC,eAAe,W","file":"static/js/main.7e791936.chunk.js","sourcesContent":["import './index.css';\nimport React, { Component } from 'react'\nimport fetch from 'node-fetch'\nimport { Button, Input, Container, Row, Col } from 'reactstrap'\n\n\n\nexport default class App extends Component {\n  state = { \"coord\": { \"lon\": -0.1257, \"lat\": 51.5085 }, \"weather\": [{ \"id\": 804, \"main\": \"Clouds\", \"description\": \"overcast clouds\", \"icon\": \"04d\" }], \"base\": \"stations\", \"main\": { \"temp\": 277.4, \"feels_like\": 273.25, \"temp_min\": 277.04, \"temp_max\": 277.59, \"pressure\": 998, \"humidity\": 87 }, \"visibility\": 7000, \"wind\": { \"speed\": 3.6, \"deg\": 300 }, \"clouds\": { \"all\": 90 }, \"dt\": 1612183991, \"sys\": { \"type\": 1, \"id\": 1414, \"country\": \"GB\", \"sunrise\": 1612165123, \"sunset\": 1612198163 }, \"timezone\": 0, \"id\": 2643743, \"name\": \"London\", \"cod\": 200 }\n\n  getWeather = (cityname) => {\n    return new Promise((resolve, reject) => {\n      fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityname}&appid=886705b4c1182eb1c69f28eb8c520e20`)\n        .then(data => data.json())\n        .then(res => this.setState(res));\n\n    })\n\n\n  }\n\n  render() {\n    console.log(this.state)\n    let imgSource = `http://openweathermap.org/img/wn/${this.state.weather[0].icon}@2x.png`;\n    let today = new Date()\n    let date = `${today.getDate()}/${today.getMonth() + 1}/${today.getFullYear()}`\n\n\n    console.log(date)\n\n\n    return (\n\n      <div>\n        <h1 id=\"head\">Check out the weather!</h1>\n\n        <Container className=\"Container m-auto text-center\">\n          <Row>\n            <Col md={4} className=\"mid mb-1 mt-1\">\n              <Row className=\"search\">\n                <h1>{this.state.name}, {this.state.sys.country}</h1>\n                <h4>{date}</h4>\n                <Input type=\"text\" id=\"cityname\" className=\"text-center\" placeholder=\"City Name\"></Input>\n                <Button onClick={() => this.getWeather(document.getElementById('cityname').value)}>What's the weather like?</Button>\n              </Row>\n            </Col>\n\n            <Col md={3} className=\"mid mb-1 mt-1 \">\n              <Row className=\"search\">\n                <h2>{Math.round((this.state.main.temp) - 273.15)} °C </h2>\n                <h3>{this.state.weather[0].main} </h3>\n                <img id=\"img\" src={imgSource} alt={`${this.state.sys.country}'s weather data`}></img>\n              </Row>\n            </Col>\n\n            <Col md={4} className=\"mid mb-1 mt-1\">\n              <Row className=\"search\">\n                <ul>\n                  <li>\n                    <h5>Wind Speed: </h5>\n                    <h4>{this.state.wind.speed} MPH</h4>\n                  </li>\n                  <li>\n                    <h5>Humidity: </h5>\n                    <h4>{this.state.main.humidity} %</h4>\n                  </li>\n                  <li>\n                    <h5>Max Temp: </h5>\n                    <h4>{Math.round((this.state.main.temp_max) - 273.15)} °C </h4>\n                  </li>\n                  <li>\n                    <h5>Min Temp: </h5>\n                    <h4>{Math.round((this.state.main.temp_min) - 273.15)} °C </h4>\n                  </li>\n                </ul>\n              </Row>\n\n\n            </Col>\n          </Row>\n\n        </Container>\n\n\n\n      </div>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}